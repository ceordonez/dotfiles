
# set -a default-terminal 'tmux-256color'
# set -as terminal-overrides ',*-256color:Tc'
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# To create new windows with ctrl-" horizontal and ctrl-% vertical
# bind c new-window -c "#{pane_current_path}"
# bind '"' split-window -c "#{pane_current_path}"
# bind % split-window -h -c "#{pane_current_path}"

setw -g mouse on

# To create new windows with ctrl-a + h horizontal and ctrl-a + v vertical
bind c new-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"

# To renumber the windows when is closed
set -g renumber-windows on

# Change ctrl-b to ctrl-a
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Scape button takes 0s to act
set -s escape-time 0

# Move between windows with ctrl + h previous and ctrl + l next
bind -n C-h previous-window
bind -n C-l next-window

# reload config file (change file location to your the tmux.conf you want to use)
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded."

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Theme
set-window-option -g window-status-current-style bold,bg=colour6,fg=colour7
set-window-option -g window-status-style fg=colour234
set-option -g message-style bg=colour237,fg=colour231
set-option -g pane-border-style fg=colour6
set-option -g pane-active-border-style fg=colour76

# Change background color of a tab when activity occurs
setw -g monitor-activity off
set -g window-status-activity-style bold,bg=colour6,fg=colour88

# Status Bar
set -g status-justify left
set -g status-bg colour6
# set -g status-fg colour35
set -g status-interval 60
set -g status-left-length 50
set -g status-left "#[bg=colour6]ðŸ’»#[fg=colour234,bold] #H#[bg=colour34]#[bg=colour6,nobold]#[fg=colour234] [#S] $tmux_target_lower"
set -g status-right '#[bg=colour6] ðŸ•” #[fg=colour234,bold]%H:%M '

#R Resize pane
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-h resize-pane -L 5
bind -r C-l resize-pane -R 5

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'github_username/plugin_name'

# Restoring pane contents
set -g @resurrect-capture-pane-contents 'on'
# Restoring nvim session (maybe does not work, need Session.vim file)
set -g @resurrect-strategy-nvim 'session'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
set-option -g focus-events on
